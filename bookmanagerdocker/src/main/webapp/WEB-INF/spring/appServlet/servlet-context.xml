<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<!-- 1. bean - beans가 기본 namespace
2. beans:bean - 기본 namespace가 beans가 아님. -->
<!-- 
환경설정 파일을 보면 맨 뒤에 이 환경 설정파일에서 사용하는 기본 namespace를 정하는 부분이 있습니다..
만약 <beans xmlns="http://www.springframework.org/schema/beans" 로 맨 윗줄에 정의되어 있으면 기본 namespace를 beans로 사용하겠다는 것이기 땜에 beans에 속하는 것들은 앞에 명시를 하지 않아도 되지만..
<beans:beans xmlns="http://www.springframework.org/schema/mvc" 로 시작할경우 기본 namespace를 mvc로 사용하겠다고 정의하기때문에 이럴 경우 beans에 속하는 것은 <beans: 로 시작하는 식으로 명시해줘야 합니다..

 -->	
 	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- 사용자의 요청(url)과 관련된 bean을 등록하는 설정파일
		controller, view, intercepter, 이미지파일 요청 등등등...
	  -->
	  
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- /resources 로 요청이 왔을 때 찾을 곳   webapp 아래에 resource 폴더를 찾겠다. -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- setViewName() 의 값 앞 뒤에 붙여줄 경로 지정  -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!--  인터셉터와 url맵핑 -->
	<interceptors>
		<interceptor>
		<!-- 모든 요청에 대해서 인터셉터를 거치게끔 -->
			<mapping path="/**"/>
			<beans:bean class="common.interceptor.LoginInterceptor" />
		</interceptor>
	</interceptors> 
	
 	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="maxUploadSize" value="100000000" />
        <beans:property name="maxInMemorySize" value="100000000" />
    </beans:bean>
	
	<!-- 빈으로 등록하기 위해 스프링이 객체를 탐색할 영역 -->
	<context:component-scan base-package="com.spring.springBM" />
		<tx:annotation-driven proxy-target-class="false"/>
	
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
		<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
		<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
	<!-- 접근제한자(생략가능) 반환형(필수) 클래스(패키지명포함) 메서드 명 및 매개변수-->
		<aop:pointcut id="requiredTx" expression="execution(* com.spring.springBM..*.*ServiceImpl.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="requiredTx"/>
	</aop:config>
	
	<tx:annotation-driven transaction-manager="transactionManager"/> 
	
</beans:beans>
